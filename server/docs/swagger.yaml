definitions:
  handlers.CreateRentalRequest:
    properties:
      trailer_id:
        type: integer
      user_id:
        type: integer
    type: object
  models.Address:
    properties:
      city:
        type: string
      id:
        type: integer
      state:
        type: string
      street:
        type: string
      zipcode:
        type: string
    type: object
  models.Customer:
    properties:
      address:
        allOf:
        - $ref: '#/definitions/models.Address'
        description: AddressID   int     `json:"address_id"`
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      phone_number:
        type: string
    type: object
  models.Location:
    properties:
      address:
        allOf:
        - $ref: '#/definitions/models.Address'
        description: AddressID int     `json:"address_id"`
      id:
        type: integer
      name:
        type: string
    type: object
  models.Rental:
    properties:
      customer:
        $ref: '#/definitions/models.Customer'
      customer_id:
        type: integer
      end_time:
        type: string
      excess_fee:
        type: number
      id:
        type: integer
      rental_fee:
        type: number
      start_time:
        type: string
      trailer:
        $ref: '#/definitions/models.Trailer'
      trailer_id:
        type: integer
    type: object
  models.Trailer:
    properties:
      availability_status:
        type: string
      id:
        type: integer
      location:
        allOf:
        - $ref: '#/definitions/models.Location'
        description: LocationID         int      `json:"location_id"`
      number:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/rental:
    post:
      consumes:
      - application/json
      description: Create a new rental entry in the database
      parameters:
      - description: CreateRentalRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateRentalRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Rental'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a new rental
      tags:
      - rental
  /api/trailer:
    get:
      description: Fetches a list of all trailers from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Trailer'
            type: array
      summary: Get all trailers
      tags:
      - trailers
  /api/trailer/{zip}:
    get:
      description: Fetches a trailer based on the zipcode from the database
      parameters:
      - description: Zip
        in: path
        name: zip
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Trailer'
      summary: Get a trailer
      tags:
      - trailer
  /api/user:
    post:
      description: Fetches a list of all trailers from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Customer'
            type: array
      summary: Get all trailers
      tags:
      - trailers
swagger: "2.0"
